/*------------------------------------------------------------------------------
 * This code was generated by Spiral Multiplier Block Generator, www.spiral.net
 * Copyright (c) 2006, Carnegie Mellon University
 * All rights reserved.
 * The code is distributed under a BSD style license
 * (see http://www.opensource.org/licenses/bsd-license.php)
 *------------------------------------------------------------------------------ */
/* ./multBlockGen.pl 26436 -fractionalBits 0*/
module multiplier_block (
    i_data0,
    o_data0
);

  // Port mode declarations:
  input   [31:0] i_data0;
  output  [31:0]
    o_data0;

  //Multipliers:

  wire [31:0]
    w1,
    w64,
    w63,
    w8192,
    w8129,
    w32,
    w95,
    w1520,
    w6609,
    w26436;

  assign w1 = i_data0;
  assign w1520 = w95 << 4;
  assign w26436 = w6609 << 2;
  assign w32 = w1 << 5;
  assign w63 = w64 - w1;
  assign w64 = w1 << 6;
  assign w6609 = w8129 - w1520;
  assign w8129 = w8192 - w63;
  assign w8192 = w1 << 13;
  assign w95 = w63 + w32;

  assign o_data0 = w26436;

  //multiplier_block area estimate = 6127.22871715;
endmodule //multiplier_block

module surround_with_regs(
	i_data0,
	o_data0,
	clk
);

	// Port mode declarations:
	input   [31:0] i_data0;
	output  [31:0] o_data0;
	reg  [31:0] o_data0;
	input clk;

	reg [31:0] i_data0_reg;
	wire [30:0] o_data0_from_mult;

	always @(posedge clk) begin
		i_data0_reg <= i_data0;
		o_data0 <= o_data0_from_mult;
	end

	multiplier_block mult_blk(
		.i_data0(i_data0_reg),
		.o_data0(o_data0_from_mult)
	);

endmodule
