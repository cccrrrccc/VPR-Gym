/*------------------------------------------------------------------------------
 * This code was generated by Spiral Multiplier Block Generator, www.spiral.net
 * Copyright (c) 2006, Carnegie Mellon University
 * All rights reserved.
 * The code is distributed under a BSD style license
 * (see http://www.opensource.org/licenses/bsd-license.php)
 *------------------------------------------------------------------------------ */
/* ./multBlockGen.pl 29044 -fractionalBits 0*/
module multiplier_block (
    i_data0,
    o_data0
);

  // Port mode declarations:
  input   [31:0] i_data0;
  output  [31:0]
    o_data0;

  //Multipliers:

  wire [31:0]
    w1,
    w256,
    w257,
    w8224,
    w8225,
    w16,
    w241,
    w964,
    w7261,
    w29044;

  assign w1 = i_data0;
  assign w16 = w1 << 4;
  assign w241 = w257 - w16;
  assign w256 = w1 << 8;
  assign w257 = w1 + w256;
  assign w29044 = w7261 << 2;
  assign w7261 = w8225 - w964;
  assign w8224 = w257 << 5;
  assign w8225 = w1 + w8224;
  assign w964 = w241 << 2;

  assign o_data0 = w29044;

  //multiplier_block area estimate = 6752.59195394118;
endmodule //multiplier_block

module surround_with_regs(
	i_data0,
	o_data0,
	clk
);

	// Port mode declarations:
	input   [31:0] i_data0;
	output  [31:0] o_data0;
	reg  [31:0] o_data0;
	input clk;

	reg [31:0] i_data0_reg;
	wire [30:0] o_data0_from_mult;

	always @(posedge clk) begin
		i_data0_reg <= i_data0;
		o_data0 <= o_data0_from_mult;
	end

	multiplier_block mult_blk(
		.i_data0(i_data0_reg),
		.o_data0(o_data0_from_mult)
	);

endmodule
