/*------------------------------------------------------------------------------
 * This code was generated by Spiral Multiplier Block Generator, www.spiral.net
 * Copyright (c) 2006, Carnegie Mellon University
 * All rights reserved.
 * The code is distributed under a BSD style license
 * (see http://www.opensource.org/licenses/bsd-license.php)
 *------------------------------------------------------------------------------ */
/* ./multBlockGen.pl 5411 -fractionalBits 0*/
module multiplier_block (
    i_data0,
    o_data0
);

  // Port mode declarations:
  input   [31:0] i_data0;
  output  [31:0]
    o_data0;

  //Multipliers:

  wire [31:0]
    w1,
    w256,
    w257,
    w1028,
    w1285,
    w512,
    w773,
    w6184,
    w5411;

  assign w1 = i_data0;
  assign w1028 = w257 << 2;
  assign w1285 = w257 + w1028;
  assign w256 = w1 << 8;
  assign w257 = w1 + w256;
  assign w512 = w1 << 9;
  assign w5411 = w6184 - w773;
  assign w6184 = w773 << 3;
  assign w773 = w1285 - w512;

  assign o_data0 = w5411;

  //multiplier_block area estimate = 6802.48797345294;
endmodule //multiplier_block

module surround_with_regs(
	i_data0,
	o_data0,
	clk
);

	// Port mode declarations:
	input   [31:0] i_data0;
	output  [31:0] o_data0;
	reg  [31:0] o_data0;
	input clk;

	reg [31:0] i_data0_reg;
	wire [30:0] o_data0_from_mult;

	always @(posedge clk) begin
		i_data0_reg <= i_data0;
		o_data0 <= o_data0_from_mult;
	end

	multiplier_block mult_blk(
		.i_data0(i_data0_reg),
		.o_data0(o_data0_from_mult)
	);

endmodule
